<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ttonway.bluecard.dao.ApplyRecordMapper">

    <resultMap id="bankBean" type="com.ttonway.bluecard.pojo.Bank">
        <id column="bkId" property="bankId"/>
        <result column="bkArea" property="area"/>
        <result column="bkName" property="bankName"/>
    </resultMap>

    <resultMap id="orgBean" type="com.ttonway.bluecard.pojo.Organization">
        <id column="orgId" property="orgId"/>
        <result column="orgArea" property="area"/>
        <result column="orgName" property="orgName"/>
    </resultMap>

    <resultMap id="recordBean" type="com.ttonway.bluecard.pojo.ApplyRecord">
        <id column="id" property="recordId" jdbcType="BIGINT"/>
        <result column="name" property="userName" jdbcType="VARCHAR"/>
        <result column="phone" property="phoneNumber" jdbcType="VARCHAR"/>
        <result column="profession" property="profession" jdbcType="VARCHAR"/>
        <result column="accumulation_fund" property="accumulationFund" jdbcType="VARCHAR"/>
        <result column="income" property="income" jdbcType="BIGINT"/>
        <result column="creditLine" property="creditLine" jdbcType="BIGINT"/>
        <result column="status" property="status" jdbcType="VARCHAR"/>
        <result column="refereePhone" property="refereePhone" jdbcType="VARCHAR"/>
        <result column="remark" property="remark" jdbcType="VARCHAR"/>
        <result column="cardName" property="cardName" jdbcType="VARCHAR"/>
        <result column="createTime" property="createTime" jdbcType="VARCHAR"/>
        <result column="updateTime" property="updateTime" jdbcType="VARCHAR"/>
        <association column="bankId" property="bank" javaType="com.ttonway.bluecard.pojo.Bank" resultMap="bankBean">
        </association>
        <association column="organizationId" property="organization" javaType="com.ttonway.bluecard.pojo.Organization"
                     resultMap="orgBean">
        </association>
    </resultMap>

    <select id="queryRecord" resultMap="recordBean" parameterType="java.lang.Long">
        select r.*, b.id as bkId, b.area as bkArea, b.bank as bkName, o.id as orgId, o.area as orgArea, o.organization as orgName
        from apply_record r
        left join sys_bank b on r.bankId = b.id
        left join sys_org o on r.organizationId = o.id
        where r.id = #{recordId,jdbcType=BIGINT}
    </select>

    <select id="queryRecordList" resultMap="recordBean" parameterType="java.util.HashMap">
        select r.*, b.id as bkId, b.area as bkArea, b.bank as bkName, o.id as orgId, o.area as orgArea,
        o.organization as orgName
        from apply_record r
        left join sys_bank b on r.bankId = b.id
        left join sys_org o on r.organizationId = o.id
        where 1=1
        <if test="bankId != null">
            and r.bankId = #{bankId,jdbcType=BIGINT}
        </if>
        <if test="status != null">
            and r.status = #{status,jdbcType=VARCHAR}
        </if>
        <if test="minTime != null">
            <![CDATA[and r.createtime >= #{minTime,jdbcType=VARCHAR}]]>
        </if>
        <if test="maxTime != null">
            <![CDATA[and r.createtime < #{maxTime,jdbcType=VARCHAR}]]>
        </if>
        <if test="keyword != null">
            and (r.name like CONCAT('%',#{keyword},'%') or r.phone like CONCAT('%',#{keyword},'%'))
        </if>
        <if test="userName != null">
            and r.name like CONCAT('%',#{userName},'%')
        </if>
        <if test="phoneNumber != null">
            and r.phone like CONCAT('%',#{phoneNumber},'%')
        </if>
        <if test="profession != null">
            and r.profession like CONCAT('%',#{profession},'%')
        </if>
        <if test="accumulationFund != null">
            and r.accumulation_fund like CONCAT('%',#{accumulationFund},'%')
        </if>
        <if test="refereePhone != null">
            and r.refereePhone like CONCAT('%',#{refereePhone},'%')
        </if>
        <if test="bankarea != null">
            and b.area like CONCAT('%',#{bankarea},'%')
        </if>
        <if test="bankbankName != null">
            and b.bank  like CONCAT('%',#{bankbankName},'%')
        </if>
        order by r.createTime desc
        <if test="start != null and length != null">
        limit #{start,jdbcType=BIGINT},#{length,jdbcType=BIGINT}
        </if>
    </select>

    <select id="queryRecordListCount" resultType="java.lang.Integer" parameterType="java.util.HashMap">
        select count(r.id) cnt
        from apply_record r
        left join sys_bank b on r.bankId = b.id
        where 1=1
        <if test="bankId != null">
            and r.bankId = #{bankId,jdbcType=BIGINT}
        </if>
        <if test="status != null">
            and r.status = #{status,jdbcType=VARCHAR}
        </if>
        <if test="minTime != null">
            <![CDATA[and r.createtime >= #{minTime,jdbcType=VARCHAR}]]>
        </if>
        <if test="maxTime != null">
            <![CDATA[and r.createtime < #{maxTime,jdbcType=VARCHAR}]]>
        </if>
        <if test="keyword != null">
            and (r.name like CONCAT('%',#{keyword},'%') or r.phone like CONCAT('%',#{keyword},'%'))
        </if>
        <if test="userName != null">
            and r.name like CONCAT('%',#{userName},'%')
        </if>
        <if test="phoneNumber != null">
            and r.phone like CONCAT('%',#{phoneNumber},'%')
        </if>
        <if test="profession != null">
            and r.profession like CONCAT('%',#{profession},'%')
        </if>
        <if test="accumulationFund != null">
            and r.accumulation_fund like CONCAT('%',#{accumulationFund},'%')
        </if>
        <if test="refereePhone != null">
            and r.refereePhone like CONCAT('%',#{refereePhone},'%')
        </if>
        <if test="bankarea != null">
            and b.area like CONCAT('%',#{bankarea},'%')
        </if>
        <if test="bankbankName != null">
            and b.bank  like CONCAT('%',#{bankbankName},'%')
        </if>
    </select>

    <select id="queryRecordStatusCount" resultType="java.util.HashMap" parameterType="java.util.HashMap">
        select r.status, count(r.id) cnt
        from apply_record r
        where 1=1
        <if test="bankId != null">
            and r.bankId = #{bankId,jdbcType=BIGINT}
        </if>
        group by status
    </select>

    <select id="queryRecordBankStatusCount" resultType="java.util.HashMap" parameterType="java.util.HashMap">
        select r.bankId, r.status, count(r.id) cnt
        from apply_record r
        where 1=1
        <if test="minTime != null">
            <![CDATA[and r.createtime >= #{minTime,jdbcType=VARCHAR}]]>
        </if>
        <if test="maxTime != null">
            <![CDATA[and r.createtime < #{maxTime,jdbcType=VARCHAR}]]>
        </if>
        group by bankId, status
    </select>

    <select id="queryRecordRefereeStatusCount" resultType="java.util.HashMap" parameterType="java.util.HashMap">
        select r.refereePhone, r.status, count(r.id) cnt
        from apply_record r
        where 1=1
        <if test="minTime != null">
            <![CDATA[and r.createtime >= #{minTime,jdbcType=VARCHAR}]]>
        </if>
        <if test="maxTime != null">
            <![CDATA[and r.createtime < #{maxTime,jdbcType=VARCHAR}]]>
        </if>
        group by refereePhone, status
    </select>

    <insert id="insertRecord" parameterType="com.ttonway.bluecard.pojo.ApplyRecord">
        insert into apply_record
        (`name`, phone, profession, accumulation_fund, organizationId, bankId, status, createTime, updateTime,
        income, creditLine, refereePhone, cardName)
        select
        #{userName,jdbcType=VARCHAR}, #{phoneNumber,jdbcType=VARCHAR}, #{profession,jdbcType=VARCHAR}, #{accumulationFund,jdbcType=VARCHAR},
        #{organization.orgId,jdbcType=BIGINT}, #{bank.bankId,jdbcType=BIGINT},
        #{status,jdbcType=VARCHAR}, #{createTime,jdbcType=VARCHAR}, #{updateTime,jdbcType=VARCHAR},
        #{income,jdbcType=BIGINT}, #{creditLine,jdbcType=BIGINT}, #{refereePhone,jdbcType=VARCHAR}, #{cardName,jdbcType=VARCHAR}
        from dual
        where NOT EXISTS (
          SELECT id
          FROM apply_record r
          WHERE `name` = #{userName,jdbcType=VARCHAR} AND
                phone = #{phoneNumber,jdbcType=VARCHAR} AND
                profession = #{profession,jdbcType=VARCHAR} AND
                accumulation_fund = #{accumulationFund,jdbcType=VARCHAR} AND
                organizationId = #{organization.orgId,jdbcType=BIGINT} AND
                bankId = #{bank.bankId,jdbcType=BIGINT} AND
                status = #{status,jdbcType=VARCHAR} AND
                income = #{income,jdbcType=BIGINT} AND
                creditLine = #{creditLine,jdbcType=BIGINT} AND
                refereePhone = #{refereePhone,jdbcType=VARCHAR} AND
                cardName = #{cardName,jdbcType=VARCHAR});
    </insert>


    <update id="updateStatus" parameterType="com.ttonway.bluecard.pojo.ApplyRecord">
        update apply_record
        set status = #{status,jdbcType=VARCHAR},
            remark = #{remark,jdbcType=VARCHAR},
            updateTime = #{updateTime,jdbcType=VARCHAR}
        where id = #{recordId,jdbcType=BIGINT}
    </update>

    <delete id="deleteRecords">
        delete from apply_record
        where id in
        <foreach collection="array" item="item" open="(" close=")" separator=",">
            #{item}
        </foreach>
    </delete>

</mapper>