<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ttonway.bluecard.dao.AdminUserMapper">

    <resultMap id="bankBean" type="com.ttonway.bluecard.pojo.Bank">
        <id column="bankId" property="bankId"/>
        <result column="bankArea" property="area"/>
        <result column="bankName" property="bankName"/>
    </resultMap>

    <resultMap id="adminUserBean" type="com.ttonway.bluecard.pojo.AdminUser">
        <id column="id" property="userId" jdbcType="BIGINT"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="userCode" property="userCode" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="role" property="role" jdbcType="VARCHAR"/>
        <result column="roleName" property="roleName" jdbcType="VARCHAR"/>
        <result column="createTime" property="createTime" jdbcType="VARCHAR"/>
        <result column="updateTime" property="updateTime" jdbcType="VARCHAR"/>
        <association column="bankId" property="bank" javaType="com.ttonway.bluecard.pojo.Bank" resultMap="bankBean">
        </association>
    </resultMap>

    <select id="queryUser" resultMap="adminUserBean" parameterType="java.lang.Long">
        select u.*, b.id as bankId, b.area as bankArea, b.bank as bankName
        from admin_user u
        left join sys_bank b
        on u.bankId = b.id
        where u.id = #{userId,jdbcType=BIGINT}
    </select>
    <select id="queryUserByCode" resultMap="adminUserBean" parameterType="java.lang.String">
        select u.*, b.id as bankId, b.area as bankArea, b.bank as bankName
        from admin_user u
        left join sys_bank b
        on u.bankId = b.id
        where u.userCode = #{userCode,jdbcType=VARCHAR}
    </select>

    <select id="queryUserList" resultMap="adminUserBean" parameterType="java.util.HashMap">
        select u.*, b.id as bankId, b.area as bankArea, b.bank as bankName
        from admin_user u
        left join sys_bank b
        on u.bankId = b.id
        order by u.createTime desc
        limit #{start,jdbcType=BIGINT},#{length,jdbcType=BIGINT}
    </select>

    <select id="queryUserListCount" resultType="java.lang.Integer">
        select count(u.id) cnt
        from admin_user u
    </select>


    <insert id="insertUser" parameterType="com.ttonway.bluecard.pojo.AdminUser">
        insert into admin_user
        (`name`, userCode, password, bankId, role, roleName, createTime, updateTime)
        values
        (#{name,jdbcType=VARCHAR}, #{userCode,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{bank.bankId,jdbcType=BIGINT},
        #{role,jdbcType=VARCHAR}, #{roleName,jdbcType=VARCHAR}, #{createTime,jdbcType=VARCHAR}, #{updateTime,jdbcType=VARCHAR})
    </insert>


    <update id="updatePassword" parameterType="com.ttonway.bluecard.pojo.AdminUser">
        update admin_user
        set password = #{password,jdbcType=VARCHAR}
        where id = #{userId,jdbcType=BIGINT}
    </update>

    <delete id="deleteUsers">
        delete from admin_user
        where id in
        <foreach collection="array" item="item" open="(" close=")" separator=",">
            #{item}
        </foreach>
    </delete>


    <select id="queryAllBank" resultMap="bankBean">
        select b.id as bankId, b.area as bankArea, b.bank as bankName
        from sys_bank b
        order by b.id asc
    </select>

    <select id="queryAllArea" resultType="java.lang.String">
        select b.area as bankArea
        from sys_bank b
        group by bankArea
    </select>

</mapper>